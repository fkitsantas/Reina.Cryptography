name: Build and Release

on:
  push:
    branches:
      - main
    paths-ignore:
      - "README.md"

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
      # Checks-out the repository
      - name: Check out code
        uses: actions/checkout@v3

      # Conditional version increment and .csproj update
      - name: Increment Version
        if: "!contains(github.event.head_commit.message, 'skip ci')"
        run: |
          # Logic to increment version in .csproj file
          # Example: Increment patch version
          # Update this script based on your versioning strategy
          $csprojFile = "Reina.Cryptography.csproj"
          [xml]$csproj = Get-Content $csprojFile
          $versionPrefix = $csproj.Project.PropertyGroup.VersionPrefix
          $versionParts = $versionPrefix.Split('.')
          $versionParts[2] = [int]$versionParts[2] + 1
          $newVersionPrefix = $versionParts -join '.'
          $csproj.Project.PropertyGroup.VersionPrefix = $newVersionPrefix
          $csproj.Save($csprojFile)
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add $csprojFile
          git commit -m "Bump version to $newVersionPrefix"
          git push

      # Install dependencies and build for both target frameworks
      - name: Build Project for .NET Framework 4.8.1 and .NET 7
        run: |
          dotnet restore Reina.Cryptography.csproj
          dotnet build Reina.Cryptography.csproj --configuration Release

      # Create a release
      - name: Create Release
        id: create_release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: "latest"
          prerelease: false
          title: "Development Build"

      # Upload .dll for .NET Framework 4.8.1 as an asset to the release
      - name: Upload .NET Framework 4.8.1 DLL
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Reina.Cryptography/bin/Release/Reina.Cryptography.net481.dll
          asset_name: Reina.Cryptography.net481.dll
          asset_content_type: application/octet-stream

      # Upload .dll for .NET 7 as an asset to the release
      - name: Upload .NET 7 DLL
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Reina.Cryptography/bin/Release/Reina.Cryptography.net7.0.dll
          asset_name: Reina.Cryptography.net7.0.dll
          asset_content_type: application/octet-stream
